{"version":3,"sources":["components/Pages/Home/Home.js","components/Pages/About/About.js","components/Pages/Resources/Resources.js","components/Pages/Plants/PlantCard.js","components/Pages/Plants/PlantData.js","components/Pages/Plants/Plants.js","components/Auth/Secret.js","components/Auth/Login.js","components/Auth/Register.js","components/App/HeaderNav.js","components/App/Header.js","components/App/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","apiResponse","_this2","fetch","then","res","text","setState","callAPI","react_default","a","createElement","className","NavLink","to","type","React","Component","About","Resources","PlantCard","plant","name","latin_name","href","short_name","src","img_path","bio","PlantData","id","Plants","_useState","useState","_useState2","slicedToArray","swiper","updateSwiper","params","modules","Pagination","Navigation","pagination","el","clickable","spaceBetween","getSwiper","plantComponents","map","plantDatum","key","Plants_PlantCard","Button","onClick","slidePrev","slideNext","lib_default","Login","handleInputChange","event","_event$target","target","value","defineProperty","onSubmit","preventDefault","method","body","JSON","stringify","headers","Content-Type","status","Error","error","history","push","catch","err","console","alert","email","password","placeholder","onChange","required","Register","HeaderNav","active","fontWeight","toggleNavbar","bind","assertThisInitialized","collapsed","Navbar","dark","NavbarBrand","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","exact","activeStyle","Header","App_HeaderNav","Footer","index_es","icon","faInstagram","faFacebook","Fragment","App_Header","Route","path","component","Home","App_Footer","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db459264.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n  }\n\n  callAPI() {\n    fetch(\"/api/test\")\n    .then(res => res.text())\n    .then(res => this.setState({ apiResponse: res }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    return (\n      <div>\n      <p>{this.state.apiResponse}</p>\n      <div className=\"jumbotron\">\n      <div className=\"row\">\n      <div className=\"col-lg text-center\">\n      <h1>Plant dat!</h1>\n      <p>Avert flooding by spawning a native plant in the Lucky Hotel!</p>\n      <NavLink to=\"/plants\">\n      <button type=\"submit\" className=\"btn spawnhome\">Plant!</button>\n      </NavLink>\n      </div>\n      </div>\n      </div>\n      <div className=\"imgtile\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\"\n\nclass About extends React.Component {\n  render() {\n    return(\n      <h1>hi</h1>\n    )\n  }\n}\n\nexport default About\n","import React from \"react\"\n\nclass Resources extends React.Component {\n  render() {\n    return(\n      <h1>Resources</h1>\n    )\n  }\n}\n\nexport default Resources\n","import React from \"react\"\n\nclass PlantCard extends React.Component {\n  render() {\n    return(\n      <div>\n\n        <div className=\"card top-buffer\">\n          <div className=\"card-header\">\n            <h2>{this.props.plant.name}</h2>\n            <h5 className=\"latin\">{this.props.plant.latin_name}</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n\n                <a href={\"/api/dig/\" + this.props.plant.short_name}>\n                  <button className=\"btn spawn\">Plant me!</button>\n                </a>\n              </div>\n            </div>\n            <div className=\"row top-buffer\">\n              <div className=\"col-lg-6 mb-3\">\n                <div className=\"slideIcon\">\n                  <img src={\"../images/icons/\" + this.props.plant.img_path} />\n                </div>\n              </div>\n              <div className=\"col-lg-6 mb-3\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5 className=\"mb-0\">Bio</h5>\n                    </div>\n                    <div className=\"card-body\">{this.props.plant.bio}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  export default PlantCard\n","const PlantData = [\n  {\n    \"id\": 0,\n    \"name\": \"American Beautyberry\",\n    \"short_name\": \"beauty\",\n    \"latin_name\": \"Callicarpa americana\",\n    \"bio\": \"Beautyberry, or French Mulberry, is very common in southeast Louisiana and important for our songbirds. The fruit is edible to humans and often gets spread by other mammals like deer, foxes, and squirrels. Used medicinally by indigenous communities and as a mosquito repellent. Research has revealed two compounds capable of deterring biting insects. A valuable shrub with many benefits that is happy in part shade or beneath larger trees.\",\n    \"img_path\": \"beauty.png\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Clasping Coneflower\",\n    \"short_name\": \"clasping\",\n    \"latin_name\": \"Rudbeckia amplexicaulis\",\n    \"bio\": \"Here is an adaptable native sunflower that can take the heat and grow in front yards that don’t want to be lawns anymore. A great attractor of birds and pollinators, this tall annual is drought tolerant but likes it when it rains. An excellent choice for those spaces that receive a lot of sun as well as water, and would like more attention from the wildlife. Medicinally important to indigenous peoples and a source of natural dyes.\",\n    \"img_path\": \"clasping.png\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Lizard's Tail\",\n    \"short_name\": \"lizard\",\n    \"latin_name\": \"Saururus cernuus\",\n    \"bio\": \"Lizard’s Tail loves water. Wants to stand in it all the time even, and especially in squishy clay soils. A puffy white tail covered in tiny flowers emerges through the heart shaped leaves when ready to pollinate. A good choice for boggy shade areas with occasional or constantly standing water. This aquatic species assists with rainwater by creating infiltration spaces in dense soils with their root system. Less pumping, more planting!\",\n    \"img_path\": \"lizard.png\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Corelli’s Obedient Plant\",\n    \"short_name\": \"obedient\",\n    \"latin_name\": \"Physostegia correlli\",\n    \"bio\": \"Also known as False Dragonhead, a tall perennial and now difficult to find in the wild. A member of the mint family and good spreader by rhizome when given plenty of water and full sun. Let’s increase the urban population of this wonderful lavender flower by letting it go to work in our rain gardens and green infrastructure. Spread the good deed seeds!\",\n    \"img_path\": \"obedient.png\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Stokes Aster\",\n    \"short_name\": \"stokes\",\n    \"latin_name\": \"Stokesia laevis\",\n    \"bio\": \"This summer bloomer needs very little maintenance and sows itself easily. It enjoys the sun but is versatile and happy with a little shade. A great nectar source for pollinators and easily divides by root cuttings. This aster is happy to accept extra rainwater in sandy soils, and to grow densely in areas when left for several years.\",\n    \"img_path\": \"stokes.png\"\n  }\n]\n\nexport default PlantData\n","import React, { useState } from 'react';\nimport PlantCard from './PlantCard'\nimport PlantData from './PlantData'\n\nimport Swiper from 'react-id-swiper';\nimport { Pagination, Navigation } from 'swiper/dist/js/swiper.esm'\n\nimport {Button} from 'reactstrap';\nimport './Plant.css';\n\nconst Plants = () => {\n  const [swiper, updateSwiper] = useState(null);\n\n  const goNext = () => {\n    if (swiper !== null) {\n      swiper.slideNext();\n    }\n  };\n\n  const goPrev = () => {\n    if (swiper !== null) {\n      swiper.slidePrev();\n    }\n  };\n\n\n  const params = {\n    modules: [Pagination, Navigation],\n    pagination: {\n      el: '.this.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    },\n    spaceBetween: 30,\n    getSwiper: updateSwiper\n  }\n\n  const plantComponents = PlantData.map(plantDatum => <div key={plantDatum.id}><PlantCard plant={plantDatum} /></div>)\n\n\n  return(\n    <div>\n      <Button className=\"btn-sm\" onClick={goPrev}>&lt;</Button>\n      <Button className=\"btn-sm\" onClick={goNext}>&gt;</Button>\n      <Swiper {...params} >\n        { plantComponents }\n      </Swiper>\n\n    </div>\n\n  )\n};\n\n\n\n\nexport default Plants\n","import React, { Component } from 'react';\n\nexport default class Secret extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: 'Loading...'\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/secret')\n      .then(res => res.text())\n      .then(res => this.setState({message: res}));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Secret</h1>\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email : '',\n      password: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch('/api/authenticate', {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status === 200) {\n        this.props.history.push('/');\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    })\n    .catch(err => {\n      console.error(err);\n      alert('Error logging in please try again');\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h1>Login Below!</h1>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          value={this.state.email}\n          onChange={this.handleInputChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          value={this.state.password}\n          onChange={this.handleInputChange}\n          required\n        />\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email : '',\n      password: ''\n    };\n  }\n\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch('/api/register', {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status === 200) {\n        this.props.history.push('/');\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    })\n    .catch(err => {\n      console.error(err);\n      alert('Error logging in please try again');\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h1>Register!</h1>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          value={this.state.email}\n          onChange={this.handleInputChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          value={this.state.password}\n          onChange={this.handleInputChange}\n          required\n        />\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem} from 'reactstrap';\nimport Login from '../Auth/Login'\nimport Register from '../Auth/Register'\n\nclass HeaderNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  active = {\n    fontWeight: \"bold\"\n  };\n\n  render() {\n\n\n    return (\n        <div>\n          <Navbar className=\"plantColor\" dark>\n            <NavbarBrand href=\"/\" className=\"mr-auto\">Plant Dat</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n\n            <Collapse isOpen={!this.state.collapsed} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink exact to=\"/\" className=\"nav-link\" activeStyle={this.active}>\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to=\"/about\" className=\"nav-link\" activeStyle={this.active}>\n                    About\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/resources\" activeStyle={this.active}>\n                    Resources\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n            <Nav navbar>\n              <NavItem>\n                <NavLink exact to=\"/login\" className=\"nav-link\" activeStyle={this.active}>\n                  Login\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav navbar>\n              <NavItem>\n                <NavLink exact to=\"/register\" className=\"nav-link\" activeStyle={this.active}>\n                  Register\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Navbar>\n        </div>\n    );\n  }\n\n\n}\n\nexport default HeaderNav\n","import React from 'react';\nimport HeaderNav from './HeaderNav'\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <div>\n        <HeaderNav />\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faInstagram, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nclass Footer extends React.Component {\n  render() {\n    return(\n      <footer className=\"page-footer font-small plantColor pt-4\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-md-0 mt-3 text-center text-md-left\">\n              <h5>Mission</h5>\n              <hr />\n              <p>Plant Dat seeks to promote indigenous plants, pavement removal, and green infrastructure for sustainable water management in New Orleans.</p>\n            </div>\n            <div className=\"col-md-6 mt-md-0 mt-3 text-center\">\n              <a href=\"https://www.instagram.com/plant_dat/\">\n                <FontAwesomeIcon icon={faInstagram} className=\"fa-4x\" />\n              </a>\n              <a href=\"https://www.facebook.com/plant_dat/\">\n                <FontAwesomeIcon icon={faFacebook} className=\"fa-4x\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Pages\nimport Home from \"../Pages/Home/Home\";\nimport About from \"../Pages/About/About\";\nimport Resources from \"../Pages/Resources/Resources\";\nimport Plants from \"../Pages/Plants/Plants\";\n\n// auth\nimport Secret from '../Auth/Secret';\nimport Login from '../Auth/Login';\nimport Register from '../Auth/Register';\nimport withAuth from '../Auth/withAuth';\n\n\n// header and footer\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"container main-content\">\n          <div id=\"content-wrap\">\n            <Route exact path=\"/\" component={Home} />\n            <Route  path=\"/about\" component={About} />\n            <Route  path=\"/resources\" component={Resources} />\n            <Route  path=\"/plants\" component={Plants} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          </div>\n        </div>\n        <Footer />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// style related\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\n// router related\nimport {BrowserRouter as Router}  from 'react-router-dom';\nimport App from './components/App/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}